___________________// read input.txt and write ouput.txt //__________________---
a.exe <input.txt >output.txt



.c>.i>.s>.o>.exe
also .exe>.dump (deassebmling)


mingw32-make

./proj1.exe


_______// C/C++ code ==>> mechine code (.exe) file//___________-
gcc text.c -o newfile.exe
g++ hi.cpp -o hi.exe
./a.exe



________//C/C++  ==>>  preprocess code (.i)// ____________ add all the include library files________________-
gcc -E text.c > text.i
g++ -E hi.cpp > hi.i


__________//C/C++ (.c) ==>>  (.s)assembly code//_______  

gcc -S -masm=intel text.c
g++ -S -masm=intel hi.cpp


__________//preprocess(.i) ==>>  (.s)assembly code//_______

gcc -S -masm=intel text.i




_________// C-code(.c), preproecess(.i), assembly(.s) ==>> object(.o) code//___________________(unread able)_________
gcc -c -o text.o text.c
g++ -c -o hi.o hi.i
g++ -c -o hi.o hi.s


____//mechine code(.exe) ==>> assemblycode(.s)____[deassemble]____//_________
_____________logical address+mechine-code +assembly code//______________________


objdump -M  intel -d text.o > text.dump

objdump -M  intel -d textf.exe > text.dump



________// obj(.o),assebly(.s),preprocess(.i) ==>> (.exe) file//____________
g++ hi.o -o hi.exe
g++ hi.s -o hi.exe
g++ hi.i -o hi.exe



____________// run form make file //__________________
make 
make main


_________/// run flex file __________

	flex prog1.l
	gcc lex.yy.c
	a.exe


______________// run bison code //_____________--
	bison -d p5.y 
	flex p5.l
	gcc p5.tab.c lex.yy.c
	a.exe <input.txt



____________// create all file from (.c/c++)//______________
	
	gcc text.c -o text.exe
	gcc -E text.c > text.i
	gcc -S -masm=intel text.i
	gcc -c -o text.o text.c
	objdump -M  intel -d text.exe > text.dump
	text.exe

m1:
	g++ hi.cpp -o hi.exe
	g++ -E hi.cpp > hi.i
	g++ -S -masm=intel hi.i
	g++ -c -o hi.o hi.cpp
	objdump -M  intel -d hi.exe > hi.dump
	hi.exe

______________// clear file //___________________

clean:
	rm -f *.o

				[note:clear all .o file from the dir]




_____________________ //reguler expression shortcut//_________________

letter [a-zA-Z]
digit [0-9]
delim [ \t]
under [_]
num {digit}{digit}*
float_num {num}*[.]{num}

number ({digit}+)
delim [ \t\n]
ws {delim}+


digit [0-9]
alpha [a-zA-Z]
id (_|{alpha})+(_|{digit}|{alpha})*


[ \t\n] {}
. {}

(20|19|18|17|16)(10|0[0-9])(180|1[0-7][0-9]|0[1-9][0-9]|00[1-9]) 

digits ({digit})+
("+"|"-"|"")({digits})("."({digits})|"")(e("+"|"-"|"")({digits})|"")




